<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ROSE | 零露漙兮]]></title>
  <link href="http://luoyulong.github.io/blog/categories/rose/atom.xml" rel="self"/>
  <link href="http://luoyulong.github.io/"/>
  <updated>2014-10-16T17:02:10+08:00</updated>
  <id>http://luoyulong.github.io/</id>
  <author>
    <name><![CDATA[luoyulong]]></name>
    <email><![CDATA[luoyulong@ncic.ac.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ROSE 在源文件的include语句之前插入语句]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/01/rose-insertstatementbeforeheader/"/>
    <updated>2014-07-01T11:50:40+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/01/rose-insertstatementbeforeheader</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>今天，在使用ROSE自动生成CUDA代码时，遇到一个问题：程序中需要使用纹理存储器对GPU访存进行加速，相应地要生成texture变量声明的代码。由于texture初始化时使用到一个宏，该宏定义在文件头部，这就使得texture的初始化必须在宏定义之后。翻遍了手册，找不到把语句插入preprocessinfo 结点（include，#define ）之后的方法，于是退一步打算找到当前scope中第一个语句，然后插到该语句之后。本打算调用firststatement的方法，报错，并且scope中的statement并不全是源码中的语句，会包含一些头文件中的结点。</p>

<h1>解决方法</h1>

<p>通过比较scope和scope中语句的名字，找到当前源文件中第一个SgStatement
``` c++
 //find the first statement of current source file
  SgStatement<em> firststatement=NULL;
  SgStatementPtrList statelist=currentscope->generateStatementList();
  for(int i=0;i&lt;statelist.size();i++)
  {
  SgStatement</em> tmp=statelist[i];
  if(tmp->get_file_info()&ndash;>get_filenameString()==currentscope->get_file_info()&ndash;>get_filenameString())</p>

<pre><code>{
firststatement=tmp;
break;
}
</code></pre>

<p>   }</p>

<pre><code>                                                                 }
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 编程要点]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/roseimportant/"/>
    <updated>2014-06-30T15:10:56+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/roseimportant</id>
    <content type="html"><![CDATA[<ul>
<li>SgName的输出要使用getString方法，而不能使用unparseToCompleteString</li>
<li>在创建AST node变量时，子节点要使用deepCopy进行深度拷贝，防止一个node在语法树中被多次引用；若在编程中不小心出现这种情况，可以通过打印dot图观察依赖关系，从而找到修改被多次引用的node。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 声明CUDA类型的变量]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/rose-cuda-varialbe/"/>
    <updated>2014-06-30T10:26:12+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/rose-cuda-varialbe</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>需要声明CUDA类型的变量，如 constant,device,shared等等</p>

<h1>解决方案</h1>

<p>调用<code>get_declarationModifier().get_storageModifier().set</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 创建模板类变量的一个取巧办法]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/rose-create-template-variable/"/>
    <updated>2014-06-30T09:42:36+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/rose-create-template-variable</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>用ROSE产生cuda代码时，为了性能需要，使用到了纹理存储器。但在纹理存储器变量声明的时候，遇到了点问题：纹理寄存器变量的类型是模板类实例，e.g,<code>texture&lt;DATATYPE,1,cudaReadModeElementType&gt; t_a</code>,但是rose中模板类变量貌似不怎么好声明，尝试了半天都没有成功。</p>

<h1>解决方案</h1>

<p>使用万金油式的buildOpaqueType直接创建模板类型,然后使用该类型创建纹理存储器变量</p>

<p>``` c++</p>

<p>//create a template instance type directly: texture&lt;DATATYPE,1,cudaReadModelElementType>
SgType* textureType=buildOpaqueType(&ldquo;texture&lt;DATATYPE,1,cudaReadModelElementType>&rdquo;,node->get_scope());</p>

<p>//create the texture type variable &ldquo;texture_a&rdquo;
SgVariableDeclaration* vdecl=buildVariableDeclaration(&ldquo;texture_a&rdquo;,textureType,node->get_scope());</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
