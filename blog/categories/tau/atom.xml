<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: TAU | 零露漙兮]]></title>
  <link href="http://luoyulong.github.io/blog/categories/tau/atom.xml" rel="self"/>
  <link href="http://luoyulong.github.io/"/>
  <updated>2015-07-12T22:10:04+08:00</updated>
  <id>http://luoyulong.github.io/</id>
  <author>
    <name><![CDATA[luoyulong]]></name>
    <email><![CDATA[luoyulong@ncic.ac.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TAU 中的profile和trace]]></title>
    <link href="http://luoyulong.github.io/blog/2013/12/19/tau/"/>
    <updated>2013-12-19T20:51:00+08:00</updated>
    <id>http://luoyulong.github.io/blog/2013/12/19/tau</id>
    <content type="html"><![CDATA[<h2>预备知识</h2>

<ul>
<li><p>profile侧重结果，trace侧重过程。</p></li>
<li><p>对于两个不同类型的测试（profile or trace），需要指定不同的makefile文件，各类makefile文件在tau编译配置时根据参数指定生成。</p></li>
</ul>


<h2>自动化插桩的过程：</h2>

<ul>
<li><p>添加或者设需要的makefile</p></li>
<li><p>根据待插桩的源码，设置相应的tau编译器（可在makefile中替换或者直接使用tau编译器编译）</p></li>
</ul>


<h3>例子：</h3>

<p>``` bash</p>

<h1>设置tau makefile</h1>

<p>export TAU_MAKEFILE=/home/xxxx/tools/tau_TRACE_PAPIWALLCLOCK/x86_64/lib/Makefile.tau-papi-pdt-trace</p>

<h1>设置插桩参数</h1>

<p>export TAU_THROTTLE=0
export COUNTER1=P_WALL_CLOCK_TIME
export COUNTER2=PAPI_L1_DCM
export COUNTER3=PAPI_FP_INS</p>

<h1>调用tau编译器</h1>

<p>tau_f90.sh  -c  hps_em_comp.f90
tau_cxx.sh  main.cpp  hps_em_comp.o -o mytest</p>

<p>```</p>

<ul>
<li>此外，进一步的详细插桩可以通过在编译时指定配置文件</li>
</ul>


<p><code>bash
tau_f90.sh -tau_options=-optTauSelectFile=ins_file -c  hps_em_comp.f90
</code>
* 配置文件格式如下：</p>

<p>``` bash</p>

<h1>Tell tau to not profile these functions</h1>

<p>BEGIN_EXCLUDE_LIST
double* get(int size)
END_EXCLUDE_LIST</p>

<h1>Exclude these files from profiling</h1>

<p>BEGIN_FILE_EXCLUDE_LIST
*.so
END_FILE_EXCLUDE_LIST</p>

<p>BEGIN_INSTRUMENT_SECTION</p>

<h1>插桩所有在文件loop_test.cpp中函数multiply内的循环</h1>

<p>loops file=&ldquo;loop_test.cpp&rdquo; routine=&ldquo;multiply&rdquo;</p>

<h1>插入代码段</h1>

<p>file = &ldquo;line_test.cpp&rdquo; line = 9 code = &ldquo;printf(\"i=%d: \&rdquo;, i);&ldquo;
exit routine ="int foo()&rdquo; code = &ldquo;cout &lt;&lt;\"exiting foo\&rdquo;&lt;&lt;endl;&ldquo;
entry routine ="int foo()&rdquo; code = &ldquo;cout &lt;&lt;\"entering foo\&rdquo;&lt;&lt;endl;i"
END_INSTRUMENT_SECTION
```</p>

<ul>
<li><p>使用PAPI测量更多指标，首先下指定使用papi参数编译的tau ，makefile，其次，使用环境变量PAPI_EVENT</p></li>
<li><p>当一次要采集多个指标时，可以通过设置COUNT &lt;1-25>来实现</p></li>
</ul>


<p><code>bash
export COUNTER1=P_WALL_CLOCK_TIME
export COUNTER2=PAPI_L1_DCM
export COUNTER3=PAPI_FP_INS
</code></p>

<ul>
<li>之后用paraprof –pack 命令打包结果成ppk，上传至数据库。</li>
</ul>


<p><code>bash
paraprof --pack pdata.ppk
</code></p>
]]></content>
  </entry>
  
</feed>
