<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[零露漙兮]]></title>
  <link href="http://luoyulong.github.io/atom.xml" rel="self"/>
  <link href="http://luoyulong.github.io/"/>
  <updated>2014-12-05T16:30:35+08:00</updated>
  <id>http://luoyulong.github.io/</id>
  <author>
    <name><![CDATA[luoyulong]]></name>
    <email><![CDATA[luoyulong@ncic.ac.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RStudio Server 环境变量LD_LIBRARY_PATH的配置]]></title>
    <link href="http://luoyulong.github.io/blog/2014/12/05/rstudio-server-dot-ld-library-path/"/>
    <updated>2014-12-05T09:59:17+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/12/05/rstudio-server-dot-ld-library-path</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>在服务器上安装了一个Rstudio-server进行基于R语言的web开发。前期一路顺利，直到开发数据库模块需要用到RODBC。在加载ODBC库后，调用函数odbcConnect结果报错：</p>

<blockquote><p>In odbcDriverConnect(&ldquo;DSN=myhps;UID=hps;PWD=hps&rdquo;):<br/>
  [RODBC] ERROR: state 01000, code 0, message [unixODBC][Driver Manager]Can&rsquo;t open lib &lsquo;/usr/lib/libmyodbc5-5.1.5.so&rsquo; : file not found</p></blockquote>

<p>第一印象是我的odbc装的有问题，但locate了libmyodbc5-5.1.5.so这个文件，存在。同时，发现使用ssh登录到服务器直接进入R，可以正常使用该函数没有报错。看来环境变量出错的概率比较大。<br/>
为了进一步确认，我在Rstudio-server中键入:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>system("source ~/.bashrc;Rscript ~/test.R",intern = TRUE)</span></code></pre></td></tr></table></div></figure>


<p>其中，test.R中的内容为</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>library(RODBC)
</span><span class='line'>odbcConnect("myhps","hps","hps")</span></code></pre></td></tr></table></div></figure>


<p>
运行成功，看来问题就是环境变量中引起的。经过排查，最终确定问题为环境变量<em>LD_LIBRARY_PATH</em>少了路径“/usr/local/lib”。那么下一步要做的事就是更新RStudio-server的<em>LD_LIBRARY_PATH</em>环境变量。
首先，我在RStudio中调用<code>Sys.getenv()</code>,打印出所有环境变量，其中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"/usr/local/lib64/R/lib:/lib:/usr/local/lib64:/home/lyl/denpendence/jdk1.7.0_51/jre/lib/amd64/server" 
</span><span class='line'>LD_LIBRARY_PATH</span></code></pre></td></tr></table></div></figure>


<p>从包含的路径来看，RStudio肯定不是使用shell的方式读取.bashrc,/etc/bashrc等文件初始化环境变量（经过实验验证，的确是这样）。于是，google了下RStudio环境变量的设置方法，回答指向了如下链接：</p>

<blockquote><p><a href="https://support.rstudio.com/hc/communities/public/questions/203035636-global-environment-variable  ">https://support.rstudio.com/hc/communities/public/questions/203035636-global-environment-variable  </a>
 <a href="https://stat.ethz.ch/R-manual/R-patched/library/base/html/Startup.html">https://stat.ethz.ch/R-manual/R-patched/library/base/html/Startup.html</a></p></blockquote>

<p> 即通过在文件<code>Renviron.site</code>,<code>Renviron</code>和<code>.Rprofile</code>中设置。起初，文档没看太仔细，直接用shell的语法设置环境变量了，但RStudio对环境变量设置有自己的一套语法，这里要注意:</p>

<blockquote><p>Lines in a site or user environment file should be either comment lines starting with #, or lines of the form name=value. The latter sets the environmental variable name to value, overriding an existing value. If value contains an expression of the form ${foo-bar}, the value is that of the environmental variable foo if that exists and is set to a non-empty value, otherwise bar. (If it is of the form ${foo}, the default is &ldquo;&rdquo;.) This construction can be nested, so bar can be of the same form (as in ${foo-${bar-blah}}). Note that the braces are essential: for example $HOME will not be interpreted.</p></blockquote>

<p> 设置ok，重启RStudio，重启session（这里要注意是重启session，而不是重新登录。Rstudio-server会帮你保存session。重启session的方法： Session->Restart R），环境变量有变化，设置成功。重新运行函数<code>odbcConnect</code>，还是报同样的错误。</p>

<p> 这里之后又折腾了几个小时，最后，重读了下RStudio-server的安装配置文档<a href="https://support.rstudio.com/hc/en-us/articles/200552316-Configuring-the-Server">https://support.rstudio.com/hc/en-us/articles/200552316-Configuring-the-Server</a> ，发现有这么一句话：</p>

<blockquote><p>You can add elements to the default LD_LIBRARY_PATH for R sessions (as determined by the R ldpaths script) by adding an rsession-ld-library-path entry to the server config file. This might be useful for ensuring that packages can locate external library dependencies that aren&rsquo;t installed in the system standard library paths. For example:
<code>
rsession-ld-library-path=/opt/local/lib:/opt/local/someapp/lib
</code></p></blockquote>

<p> 于是我在配置文件 <code>/etc/rstudio/rserver.conf</code>添加相应设置
 <code>
 rsession-ld-library-path=/usr/local/lib
</code>
 重启RStudio-server，重启session，终于成功。看来，RStudio-server的<em>LD_LIBARAR_PATH</em>只有在这里设置才有用,真是个反人类的配置习惯。至此，在该问题上已经花费了5个小时。这同时也提醒我们，仔细看文档是多么的重要！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Goagent 进行科学上网]]></title>
    <link href="http://luoyulong.github.io/blog/2014/10/18/goagentsetup/"/>
    <updated>2014-10-18T12:20:04+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/10/18/goagentsetup</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>一直需要打开一些国外的网站，例如google学术，会议官网，但是由于某些原因，不能直接上网。</p>

<h1>解决方案</h1>

<h2>使用google app engin</h2>

<ol>
<li>使用goagent程序配置好appid，密码</li>
<li>设置好端口，apc的路径</li>
<li>设置iplist，<strong>这步是最重要的，设置一个好的iplist可以直接感觉不到中间代理的存在</strong></li>
<li>速度快的ip主要是通过使用脚本的方法扫描，或者可以网上搜索现场的ip</li>
<li>最后，不要忘记设置dns。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Latex: 行内长公式换行]]></title>
    <link href="http://luoyulong.github.io/blog/2014/10/16/latexequationnewline/"/>
    <updated>2014-10-16T16:42:18+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/10/16/latexequationnewline</id>
    <content type="html"><![CDATA[<h1>问题描述</h1>

<p>写论文的时候有一个长公式，长度超过了半页宽度，造成了溢出，很丑陋，网上搜了下没有比较满意的换行办法。</p>

<h1>解决方案</h1>

<p>想到一个比较简单地方法，直接在想要换行的地方插入两个美元符号，即$ $，把一个公式拆成两个，顺利换行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R 数据框按列排序]]></title>
    <link href="http://luoyulong.github.io/blog/2014/09/22/r-orderbycolumn/"/>
    <updated>2014-09-22T11:00:40+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/09/22/r-orderbycolumn</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>A<span class="p">[</span>order<span class="p">(</span>A<span class="p">[,</span><span class="m">4</span><span class="p">],</span>decreasing<span class="o">=</span><span class="k-Variable">T</span><span class="p">),]</span>＃按照第<span class="m">4</span>列降序排序
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R语言 arff 读取错误]]></title>
    <link href="http://luoyulong.github.io/blog/2014/09/21/arff-reading-problem/"/>
    <updated>2014-09-21T22:46:18+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/09/21/arff-reading-problem</id>
    <content type="html"><![CDATA[<h2>问题描述</h2>

<p>在arff每行的最后中写入“float”属性，结果一种一行总是与其余几行写入的结果不一样</p>

<h2>解决</h2>

<p>最终发现是在该行的最后面多了一个空格，删除空格即可正常读取</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[latex 多行公式的对齐]]></title>
    <link href="http://luoyulong.github.io/blog/2014/08/01/mutiplelinealigninmath/"/>
    <updated>2014-08-01T16:52:37+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/08/01/mutiplelinealigninmath</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>在写论文时要书写一个长公式，把他分成多行并在等号后面左对齐</p>

<h1>解决方法</h1>

<p>在数学环境内使用数组，代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='latex'><span class='line'><span class="k">\begin</span><span class="nb">{</span>equation<span class="nb">}</span>
</span><span class='line'>    <span class="k">\begin</span><span class="nb">{</span>array<span class="nb">}{</span>rcl<span class="nb">}</span>
</span><span class='line'>        a+b+c <span class="nb">&amp;</span> = <span class="nb">&amp;</span> d<span class="k">\\</span>
</span><span class='line'>                  <span class="nb">&amp;</span> = <span class="nb">&amp;</span> e<span class="k">\\</span>
</span><span class='line'>        f+g <span class="nb">&amp;</span> = <span class="nb">&amp;</span> h<span class="k">\\</span>
</span><span class='line'>             <span class="nb">&amp;</span> = <span class="nb">&amp;</span>i+j+k
</span><span class='line'>    <span class="k">\end</span><span class="nb">{</span>array<span class="nb">}</span>
</span><span class='line'><span class="k">\end</span><span class="nb">{</span>equation<span class="nb">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git版本的重置]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/28/gitcommand/"/>
    <updated>2014-07-28T23:55:38+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/28/gitcommand</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>当多个人对git进行修改时，会在更新时造成版本冲突，需要合并。当一个版本的修改并不重要时，不想合并</p>

<h1>解决方案</h1>

<p>调用如下命令，重置修改
<code>git reset --hard HEAD^</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stencil BenchmarkSets]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/07/benchmarksets/"/>
    <updated>2014-07-07T21:00:10+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/07/benchmarksets</id>
    <content type="html"><![CDATA[<h1>候选benchmark<em> <del>PloyBench</del></em> cell_cuda<em> radinia</em> FDTD</h1>

<ul>
<li>Himeno stencil:test

<blockquote><p><a href="https://hpcforge.org/scm/viewvc.php/*checkout*/trunk/debug/cuda/nvidia_himeno_mpicuda/HimenoMultiGPUBenchmark.pdf?root=codes">Implementing the Himeno Benchmark with CUDA on GPU Clusters</a></p></blockquote></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">imax</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">jmax</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">kmax</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">s0</span> <span class="o">=</span>  <span class="n">a0</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span> <span class="n">a1</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span> <span class="n">a2</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span> <span class="n">b0</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">+</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">])</span><span class="o">+</span> <span class="n">b1</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span> <span class="n">b2</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span> <span class="n">c0</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span> <span class="n">c1</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span> <span class="n">c2</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span> <span class="n">wrk1</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">];</span>
</span><span class='line'><span class="n">ss</span> <span class="o">=</span> <span class="p">(</span><span class="n">s0</span><span class="o">*</span><span class="n">a3</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">-</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">])</span><span class="o">*</span><span class="n">bnd</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">];</span>     <span class="c1">//(ss = delta P)</span>
</span><span class='line'><span class="n">wrk2</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">+</span><span class="n">omega</span><span class="o">*</span><span class="n">ss</span><span class="p">;</span>    <span class="c1">//(over-relaxation)</span>
</span><span class='line'><span class="n">gosa</span> <span class="o">+=</span> <span class="n">ss</span><span class="o">*</span><span class="n">ss</span><span class="p">;</span>                        <span class="c1">//(residual, measure of convergence)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>3D Possion 19-point: test</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">a1</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">c0</span><span class="o">*</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span>
</span><span class='line'>              <span class="n">c1</span><span class="o">*</span><span class="p">(</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">])</span><span class="o">+</span>
</span><span class='line'>              <span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">+</span>
</span><span class='line'>              <span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>              <span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">a0</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>3D heat:test</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">=</span>  <span class="mf">0.125</span> <span class="o">*</span> <span class="p">(</span><span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">-</span> <span class="mf">2.0</span> <span class="o">*</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>         <span class="n">c</span> <span class="o">+</span> <span class="mf">0.125</span> <span class="o">*</span> <span class="p">(</span><span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">-</span> <span class="mf">2.0</span> <span class="o">*</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>         <span class="o">+</span> <span class="mf">0.125</span> <span class="o">*</span> <span class="p">(</span><span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="mf">2.0</span> <span class="o">*</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>         <span class="o">+</span> <span class="n">a</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Wave equation:test</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cm">/* It&#39;s order-4, 3D 15 point stencil, to match up with Matteo Frigo&#39;s</span>
</span><span class='line'><span class="cm"> * hand-optimized wave equation </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">float</span> <span class="n">c0</span> <span class="o">=</span> <span class="n">coef</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">coef</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">c2</span> <span class="o">=</span> <span class="n">coef</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">c3</span> <span class="o">=</span> <span class="n">coef</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">c4</span> <span class="o">=</span> <span class="n">coef</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
</span><span class='line'><span class="kt">float</span> <span class="n">div</span> <span class="o">=</span> <span class="n">c0</span> <span class="o">*</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>                <span class="n">c1</span> <span class="o">*</span> <span class="p">((</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)))</span>
</span><span class='line'>              <span class="o">+</span> <span class="n">c2</span> <span class="o">*</span> <span class="p">((</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)))</span>
</span><span class='line'>              <span class="o">+</span> <span class="n">c3</span> <span class="o">*</span> <span class="p">((</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">3</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)))</span>
</span><span class='line'>              <span class="o">+</span> <span class="n">c4</span> <span class="o">*</span> <span class="p">((</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>                    <span class="o">+</span> <span class="p">(</span><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)));</span>
</span><span class='line'><span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">-</span> <span class="n">pa</span><span class="p">(</span><span class="n">t</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="n">vsq</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="n">Nxy</span> <span class="o">+</span> <span class="n">j</span> <span class="o">*</span> <span class="n">Nx</span> <span class="o">+</span> <span class="n">k</span><span class="p">]</span> <span class="o">*</span> <span class="n">div</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<!--#Pochoir benchmark
Figure 3 shows Pochoir’s performance on a wider range of benchmarks, including:
* heat equation (Heat) [13] on a 2D grid, a 2D torus, and a 4D grid;
* Conway’s game of Life (Life) [18];
* finite-difference wave equation (Wave) [32];
* attice Boltzmann method (LBM) [30]; 
* RNA secondary structure prediction (RNA) [1, 6]; 
* pairwise sequence alignment (PSA) [19];
* longest common subsequence (LCS) [7];
* American put stock option pricing (APOP) [24].-->



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R 函数内使用load加载全局变量]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/07/r-load-global-variable-in-function/"/>
    <updated>2014-07-07T18:55:04+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/07/r-load-global-variable-in-function</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>之前的代码中把训练的模型存储到文件中，之后调用的时候会通过函数load加载。这次把load的调用包装到一个函数内，结果怎么都load不进来（当前函数内有效，切换到其他函数时加载的全局变量global.model就为空了）。经过研究，发现load把文件内的变量加载到当前函数environment的局部变量里了。</p>

<h1>解决方案</h1>

<p>在调用load之后，把函数内局部变量的值用<code>&lt;&lt;-</code>赋给全局变量。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'> load<span class="p">(</span><span class="s">&quot;globalmodels.saved&quot;</span><span class="p">)</span>
</span><span class='line'> global.model <span class="o">&lt;&lt;-</span> global.model
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R 设置工作路径为当前文件所在路径]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/06/r-setcurrentpath/"/>
    <updated>2014-07-06T21:34:32+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/06/r-setcurrentpath</id>
    <content type="html"><![CDATA[<h1>问题：</h1>

<p>对于R语言来说，要include另一个文件，需要用到命令source；对于在源文件中的R脚本，要source当前文件所在目录下的其他文件，还需要把R语言解释器的工作路径设置为当前文件所在路径，否则source某个文件就需要使用绝对路径，不利于项目的移植。</p>

<h1>解决方案:</h1>

<p>通过下方的一块代码片段，就可以把R语言的工作路径设置为文件所在路径</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>frame_files <span class="o">&lt;-</span> lapply<span class="p">(</span>sys.frames<span class="p">(),</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> x<span class="o">$</span>ofile<span class="p">)</span>
</span><span class='line'>frame_files <span class="o">&lt;-</span> Filter<span class="p">(</span>Negate<span class="p">(</span>is.null<span class="p">),</span> frame_files<span class="p">)</span>
</span><span class='line'>TOPDIR <span class="o">&lt;-</span> dirname<span class="p">(</span>frame_files<span class="p">[[</span>length<span class="p">(</span>frame_files<span class="p">)]])</span>
</span><span class='line'>setwd<span class="p">(</span>TOPDIR<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R 二维点图的绘画]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/06/r-dotchart/"/>
    <updated>2014-07-06T10:34:47+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/06/r-dotchart</id>
    <content type="html"><![CDATA[<p>对于一个具有二维属性，一维结果的数据库，想把它表现成二维点图的形式，我们可以使用plot函数来绘画，其中使用X，Y两个维度来表示其属性，通过点的颜色，大小来表示其结果</p>

<ul>
<li>首先，我们先根据其结果值，生成相应的颜色代码，这里我们通过颜色的深浅来表示值的大小，颜色越深，值越大：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">#function GetRBG convert value to a color number  </span>
</span><span class='line'>GetRGB <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>val<span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  maxval <span class="o">&lt;-</span> max<span class="p">(</span>val<span class="p">)</span>
</span><span class='line'>  col <span class="o">&lt;-</span> rgb<span class="p">(</span><span class="m">1</span><span class="o">-</span><span class="p">(</span>val<span class="o">/</span>maxval<span class="p">)</span><span class="o">^</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="o">-</span><span class="p">(</span>val<span class="o">/</span>maxval<span class="p">)</span><span class="o">^</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="o">-</span><span class="p">(</span>val<span class="o">/</span>maxval<span class="p">)</span><span class="o">^</span><span class="m">4</span><span class="p">)</span>
</span><span class='line'>  <span class="kr">return</span> <span class="p">(</span>col<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li>其次，我们使用plot绘画二维点图</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">#some preprocess</span>
</span><span class='line'>result<span class="o">$</span>x <span class="o">&lt;-</span> unlist<span class="p">(</span>lapply<span class="p">(</span>result<span class="o">$</span>OptConfig<span class="p">,</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> GetNumberFromStr<span class="p">(</span>x<span class="p">,</span> <span class="m">2</span><span class="p">)))</span>
</span><span class='line'>result<span class="o">$</span>y <span class="o">&lt;-</span> unlist<span class="p">(</span>lapply<span class="p">(</span>result<span class="o">$</span>OptConfig<span class="p">,</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> GetNumberFromStr<span class="p">(</span>x<span class="p">,</span> <span class="m">3</span><span class="p">)))</span>
</span><span class='line'><span class="c1">#achieve the color for value vector</span>
</span><span class='line'>result<span class="o">$</span>col <span class="o">&lt;-</span> result<span class="o">$</span>Gflops
</span><span class='line'><span class="c1">#using function plot </span>
</span><span class='line'>plot<span class="p">(</span>result<span class="o">$</span>x<span class="p">,</span> result<span class="o">$</span>y<span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span>max<span class="p">(</span>result<span class="o">$</span>y<span class="p">)),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span> max<span class="p">(</span>result<span class="o">$</span>x<span class="p">)),</span> pch<span class="o">=</span><span class="m">18</span><span class="p">,</span> col<span class="o">=</span>GetRGB<span class="p">(</span>result<span class="o">$</span>col<span class="p">),</span> type<span class="o">=</span><span class="s">&quot;p&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;X&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;Y&quot;</span><span class="p">,</span> cex<span class="o">=</span><span class="m">0.7</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://raw.githubusercontent.com/luoyulong/luoyulong.github.io/source/source/_posts/image/plot_example.jpeg" alt="图片貌似出错啦" /></p>

<ul>
<li>对于重要的点，使用point进行飘红强调</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">#achieve the first 100 results</span>
</span><span class='line'>bestresult <span class="o">&lt;-</span> result<span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">,</span> <span class="p">]</span>
</span><span class='line'><span class="c1">#paint the 100 results using red</span>
</span><span class='line'>points<span class="p">(</span>bestresult<span class="o">$</span>x<span class="p">,</span> bestresult<span class="o">$</span>y<span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> type<span class="o">=</span><span class="s">&quot;p&quot;</span> <span class="p">,</span>cex<span class="o">=</span><span class="m">0.7</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://raw.githubusercontent.com/luoyulong/luoyulong.github.io/source/source/_posts/image/point_red.jpeg" alt="图片貌似出错啦" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CUDA 优化经验]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/03/gpuexperiences/"/>
    <updated>2014-07-03T17:45:10+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/03/gpuexperiences</id>
    <content type="html"><![CDATA[<h1>硬件模型</h1>

<ol>
<li><p>shared-memoy在硬件层是以SM为单位，在逻辑层是以block为单位</p></li>
<li><p>warp是GPU在硬件层的并行单位。一般来说，warp等于32. SM在处理一个block kernel时，会经可能多的发射warp，每个warp内线程的大小为32.</p></li>
<li><p><span id="anchor1"></span>每个SM可以同时驻留多个 block执行（active block），这主要取决于当前SM是否拥有足够的硬件资源，如Register，shared-memory等等.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></li>
<li><p>在200机器上的GPU，每个SM拥有256*256个32位的寄存器（即平均每个线程有256个32-bite的寄存器），49152byte的shared memory,65536byte的constant memory。</p></li>
</ol>


<h1>优化原则</h1>

<ol>
<li><p>把部分无共享的shared-memory变为global memory， 并没有增加速度，推测是因为对shared-memory减少的还不够 不足以使得同时在SM运行的block增加。（已经验证）</p></li>
<li><p>有些常量经常被用到，且占用的空间很小。之前使用常量存储器，现改用参数传递，放入寄存器进行加速。</p></li>
<li><p>把与threadIdx无关的公共计算提到host端计算，再把结果使用参数传递给kernel函数</p></li>
<li><p>写回的变量不使用shared-memory</p></li>
<li><p>shared-memory和分块大小之间有一个<a href="#anchor1">tradeoff</a>，即越多的shared-memory会导致在同一SM上驻留的block减少，但同时其访存的性能会上升</p></li>
<li><p>除法非常耗时，如果精度允许的话，使用被除数的倒数组成乘法替换除法。</p></li>
<li><p>GPU适合小而多的运算，对于复杂运算（例如许多除法，大尺寸工作集），CPU反而占据性能优势</p></li>
<li>分块的大小：block中总的线程数要大于每个sm中硬件线程的个数，这样才能保证硬件线程都处在工作中。</li>
</ol>


<h1>CUDA手册:性能优化</h1>

<p>Performance optimization revolves around three basic strategies:<em> Maximize parallel execution to achieve maximum utilization;</em> Optimize memory usage to achieve maximum memory throughput;* Optimize instruction usage to achieve maximum instruction throughput</p>

<h2>Maximize Utilization</h2>

<p>XXXX###Application Level
XXXX###Device Level
1. For devices of compute capability 1.x, only one kernel can execute on a device at one time, so the kernel should be launched with at least <strong>as many thread blocks as</strong> there are multiprocessors in the device.2. For devices of compute capability 2.x and higher, multiple kernels can <strong>execute concurrently</strong> on a device, so maximum utilization can also be achieved by using streams to enable enough kernels to execute concurrently as described in Asynchronous Concurrent Execution.</p>

<h3>Multiprocessor Level</h3>

<p>XXXX</p>

<h2>Maximize Memory Throughput</h2>

<p>XXXX</p>

<h3>Device Memory Accesses</h3>

<p>XXXX</p>

<h4>Shared Memory<em> xxxx</em> Because it is on-chip, shared memory has much higher bandwidth and much lower latency than local or global memory.To achieve high bandwidth, shared memory is divided into equally-sized memory modules, called banks, which can be accessed simultaneously. Any memory read or write request made of n addresses that fall in n distinct memory banks can therefore be serviced simultaneously, yielding an overall bandwidth that is n times as high as the bandwidth of a single module.</h4>

<ul>
<li>However, if two addresses of a memory request fall in the same memory bank, there is a <strong>bank conflict</strong> and the access has to be serialized. The hardware splits a memory request with bank conflicts into as many separate conflict-free requests as necessary, decreasing throughput by a factor equal to the number of separate memory requests. If the number of separate memory requests is n, the initial memory request is said to cause n-way bank conflicts.</li>
<li>To get maximum performance, it is therefore important to understand how memory addresses map to memory banks in order to schedule the memory requests so as to minimize bank conflicts. This is described in Compute Capability 1.x,Compute Capability 2.x, Compute Capability 3.x, and Compute Capability 5.0 for devices of compute capability 1.x, 2.x, 3.x, and 5.0, respectively.</li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>详见http://stackoverflow.com/questions/12212003/how-concurrent-blocks-can-run-a-single-gpu-streaming-multiprocessor/12213137#12213137<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[论文写作经验]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/03/paperwritting/"/>
    <updated>2014-07-03T09:28:32+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/03/paperwritting</id>
    <content type="html"><![CDATA[<h2>对reviewer的误区</h2>

<h3>Reviewers will carefully read my paper ? <strong>Totally wrong!</strong></h3>

<ul>
<li>A reviewer often has a pile of papers to review</li>
<li>A reviewer typically makes up his/her mind after 5-minute browsing <strong><em>title/author->abstract->conclusions->references &ndash;>introduction</em></strong>, then spends &lt; 1h to justify (moving to main body of the paper)</li>
</ul>


<h3>Your action:</h3>

<ul>
<li>make your points <strong><em>EARLY</em></strong></li>
<li>bring up your results <strong><em>QUICK</em></strong></li>
<li>highlight your contributions <strong><em>FAST</em></strong></li>
<li>make your paper easy to read, clear to follow, and good to learn</li>
</ul>


<h2>Component of a paper</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[英语写作 句子]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/02/englishwriting/"/>
    <updated>2014-07-02T21:57:54+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/02/englishwriting</id>
    <content type="html"><![CDATA[<h1>句子</h1>

<ul>
<li>xxxx,to the best of our knowledge,not been previously studied and is now more compelling than ever</li>
<li>While a large body of work exists on DRAM in laboratory conditions, little has been reported on real DRAM failures in large production clusters.</li>
<li>with extremely low energy footprints, all within acceptable area bounds
Failures are costly in terms of &hellip;</li>
<li>To our knowledge, these are the first performance results of a shortest path problem on realistic graph instances in the order of billions of vertices and edges.[1]</li>
<li>In this work, our focus is to attack the dual problems of increasing power consumption and latency for DRAM devices</li>
<li>These observations have the potential to open up new avenues for architecture research.</li>
<li>In terms of xxx &mdash;&ndash; 对于xxx方面</li>
<li>To the best of our knowledge this is the first proposed scheme that &hellip;
reads have no option but to wait at the memory controller.</li>
<li>Guard against forgetting &mdash;-防止XXXX</li>
<li>reason about &mdash;-推出</li>
<li>At 16 KB per multiprocessor, the shared memory is a scarce resource and must be used sparingly.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CUDA 计时的方法]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/02/cuda-timing/"/>
    <updated>2014-07-02T15:04:09+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/02/cuda-timing</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>测试CUDA应用的时间</p>

<h1>解决方案</h1>

<p>引用自stackoverflow：</p>

<blockquote><p>You could do sth along the lines of :</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='cuda'><span class='line'><span class="cp">#include&lt;sys/time.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="n">t1</span><span class="p">,</span> <span class="n">t2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">t1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernel_call</span><span class="o">&lt;&lt;&lt;</span><span class="n">dimGrid</span><span class="p">,</span> <span class="n">dimBlock</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;&gt;&gt;</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span><span class="n">cudaThreadSynchronize</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">t2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">double</span> <span class="n">time</span> <span class="o">=</span> <span class="p">(</span><span class="mf">1000000.0</span><span class="o">*</span><span class="p">(</span><span class="n">t2</span><span class="p">.</span><span class="n">tv_sec</span><span class="o">-</span><span class="n">t1</span><span class="p">.</span><span class="n">tv_sec</span><span class="p">)</span> <span class="o">+</span> <span class="n">t2</span><span class="p">.</span><span class="n">tv_usec</span><span class="o">-</span><span class="n">t1</span><span class="p">.</span><span class="n">tv_usec</span><span class="p">)</span><span class="o">/</span><span class="mf">1000000.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Time to generate:  %3.1f ms </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>or:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cuda'><span class='line'><span class="kt">float</span> <span class="n">time</span><span class="p">;</span>
</span><span class='line'><span class="n">cudaEvent_t</span> <span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventCreate</span><span class="p">(</span><span class="o">&amp;</span><span class="n">start</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventCreate</span><span class="p">(</span><span class="o">&amp;</span><span class="n">stop</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventRecord</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernel_call</span><span class="o">&lt;&lt;&lt;</span><span class="n">dimGrid</span><span class="p">,</span> <span class="n">dimBlock</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;&gt;&gt;</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventRecord</span><span class="p">(</span><span class="n">stop</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventSynchronize</span><span class="p">(</span><span class="n">stop</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'><span class="n">gpuErrchk</span><span class="p">(</span> <span class="n">cudaEventElapsedTime</span><span class="p">(</span><span class="o">&amp;</span><span class="n">time</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Time to generate:  %3.1f ms </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中，在cpu端计时，由于GPU的kenernl与cpu是异步执行，所以在获得整个cuda应用的结束时间前，必须要调用cudaThreadSynchronize（现替换成cudaDeviceSynchronize），否则测的时间是最后一个kernel 启动的时间。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 在源文件的include语句之前插入语句]]></title>
    <link href="http://luoyulong.github.io/blog/2014/07/01/rose-insertstatementbeforeheader/"/>
    <updated>2014-07-01T11:50:40+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/07/01/rose-insertstatementbeforeheader</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>今天，在使用ROSE自动生成CUDA代码时，遇到一个问题：程序中需要使用纹理存储器对GPU访存进行加速，相应地要生成texture变量声明的代码。由于texture初始化时使用到一个宏，该宏定义在文件头部，这就使得texture的初始化必须在宏定义之后。翻遍了手册，找不到把语句插入preprocessinfo 结点（include，#define ）之后的方法，于是退一步打算找到当前scope中第一个语句，然后插到该语句之后。本打算调用firststatement的方法，报错，并且scope中的statement并不全是源码中的语句，会包含一些头文件中的结点。</p>

<h1>解决方法</h1>

<p>通过比较scope和scope中语句的名字，找到当前源文件中第一个SgStatement</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'> <span class="c1">//find the first statement of current source file</span>
</span><span class='line'>  <span class="n">SgStatement</span><span class="o">*</span> <span class="n">firststatement</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>  <span class="n">SgStatementPtrList</span> <span class="n">statelist</span><span class="o">=</span><span class="n">currentscope</span><span class="o">-&gt;</span><span class="n">generateStatementList</span><span class="p">();</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">statelist</span><span class="p">.</span><span class="n">size</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>  <span class="n">SgStatement</span><span class="o">*</span> <span class="n">tmp</span><span class="o">=</span><span class="n">statelist</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">get_file_info</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">get_filenameString</span><span class="p">()</span><span class="o">==</span><span class="n">currentscope</span><span class="o">-&gt;</span><span class="n">get_file_info</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">get_filenameString</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="n">firststatement</span><span class="o">=</span><span class="n">tmp</span><span class="p">;</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>                                                                     <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[检测Linux下 ODBC是否配置成功]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/linuxodbc/"/>
    <updated>2014-06-30T21:48:21+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/linuxodbc</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>测试ODBC安装是否成功</p>

<h1>解决方案</h1>

<p>使用isql测试数据源是否配置正确</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># dbname:the username of target database</span>
</span><span class='line'><span class="c"># dbpsw: the password of target database</span>
</span><span class='line'>imysql -v datasourcename dbname dbpsw
</span></code></pre></td></tr></table></div></figure>


<p>如果数据源配置正确，会出现进入数据库</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 编程要点]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/roseimportant/"/>
    <updated>2014-06-30T15:10:56+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/roseimportant</id>
    <content type="html"><![CDATA[<ul>
<li>SgName的输出要使用getString方法，而不能使用unparseToCompleteString</li>
<li>在创建AST node变量时，子节点要使用deepCopy进行深度拷贝，防止一个node在语法树中被多次引用；若在编程中不小心出现这种情况，可以通过打印dot图观察依赖关系，从而找到修改被多次引用的node。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 声明CUDA类型的变量]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/rose-cuda-varialbe/"/>
    <updated>2014-06-30T10:26:12+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/rose-cuda-varialbe</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>需要声明CUDA类型的变量，如 constant,device,shared等等</p>

<h1>解决方案</h1>

<p>调用<code>get_declarationModifier().get_storageModifier().set</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROSE 创建模板类变量的一个取巧办法]]></title>
    <link href="http://luoyulong.github.io/blog/2014/06/30/rose-create-template-variable/"/>
    <updated>2014-06-30T09:42:36+08:00</updated>
    <id>http://luoyulong.github.io/blog/2014/06/30/rose-create-template-variable</id>
    <content type="html"><![CDATA[<h1>问题</h1>

<p>用ROSE产生cuda代码时，为了性能需要，使用到了纹理存储器。但在纹理存储器变量声明的时候，遇到了点问题：纹理寄存器变量的类型是模板类实例，e.g,<code>texture&lt;DATATYPE,1,cudaReadModeElementType&gt; t_a</code>,但是rose中模板类变量貌似不怎么好声明，尝试了半天都没有成功。</p>

<h1>解决方案</h1>

<p>使用万金油式的buildOpaqueType直接创建模板类型,然后使用该类型创建纹理存储器变量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">//create a template instance type directly: texture&lt;DATATYPE,1,cudaReadModelElementType&gt;</span>
</span><span class='line'><span class="n">SgType</span><span class="o">*</span> <span class="n">textureType</span><span class="o">=</span><span class="n">buildOpaqueType</span><span class="p">(</span><span class="s">&quot;texture&lt;DATATYPE,1,cudaReadModelElementType&gt;&quot;</span><span class="p">,</span><span class="n">node</span><span class="o">-&gt;</span><span class="n">get_scope</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//create the texture type variable &quot;texture_a&quot;</span>
</span><span class='line'><span class="n">SgVariableDeclaration</span><span class="o">*</span> <span class="n">vdecl</span><span class="o">=</span><span class="n">buildVariableDeclaration</span><span class="p">(</span><span class="s">&quot;texture_a&quot;</span><span class="p">,</span><span class="n">textureType</span><span class="p">,</span><span class="n">node</span><span class="o">-&gt;</span><span class="n">get_scope</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
